{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = np.array([0,10,15,20,25,30])\n",
    "y = np.array([0,86,126,171,217,258])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f105ac9f860>]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x,y, '+')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "m,n = np.polyfit(x,y,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8.631428571428572, -0.857142857142845)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m,n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ -0.85714286,  85.45714286, 128.61428571, 171.77142857,\n",
       "       214.92857143, 258.08571429])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y2 = m*x+n\n",
    "y2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x,y,'b+',x,y2,'y-')\n",
    "plt.grid()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
